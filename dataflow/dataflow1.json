{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable10",
						"type": "DatasetReference"
					},
					"name": "transaction"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable11",
						"type": "DatasetReference"
					},
					"name": "product"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable12",
						"type": "DatasetReference"
					},
					"name": "stores"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable13",
						"type": "DatasetReference"
					},
					"name": "TopRatedSink"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable14",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable15",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable16",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable17",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable18",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable19",
						"type": "DatasetReference"
					},
					"name": "sink7"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable20",
						"type": "DatasetReference"
					},
					"name": "sink8"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "MaxCountCustomerCategory"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "TopBuyers"
				},
				{
					"name": "TopSellingClassificatoinBrandName"
				},
				{
					"name": "split1"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "RevenuePerYear"
				},
				{
					"name": "TotalRevenueYearAndCategory"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "TopRatedStore"
				},
				{
					"name": "aggregate3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customer_id as string,",
				"          product_id as string,",
				"          quantity as integer,",
				"          transaction_date as date,",
				"          transaction_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> transaction",
				"source(output(",
				"          id as string,",
				"          Brand_Name as string,",
				"          Color as string,",
				"          Occasion as string,",
				"          Size as string,",
				"          Width as string,",
				"          Model_Name as string,",
				"          Market_Price as string,",
				"          Lenskart_Price as integer,",
				"          Offer_Name as string,",
				"          Quantity as integer,",
				"          Suited_For as string,",
				"          {Search_Product Name} as string,",
				"          Classification as string,",
				"          Average_Ratings as string,",
				"          Total_No_of_Ratings as string,",
				"          Purchase_Count as string,",
				"          Wishlist_Count as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> product",
				"source(output(",
				"          Store_Name as string,",
				"          Address as string,",
				"          Location as string,",
				"          Timings as string,",
				"          {Rating_(reviewers)} as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stores",
				"transaction, product join(product_id == id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(Classification),",
				"     customer_id = max(customer_id),",
				"          count = count(customer_id)) ~> MaxCountCustomerCategory",
				"transaction aggregate(groupBy(customer_id),",
				"     quantity = sum(quantity)) ~> aggregate2",
				"aggregate2 sort(desc(quantity, true)) ~> TopBuyers",
				"product aggregate(groupBy(Classification),",
				"     Brand_Name = max(Brand_Name),",
				"          Model_Name = max(Model_Name),",
				"          Purchase_Count = max(Purchase_Count)) ~> TopSellingClassificatoinBrandName",
				"product split(Quantity<100,",
				"     disjoint: false) ~> split1@(LowOnStock, OnStock)",
				"transaction, product join(product_id == id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive(year = year(transaction_date)) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(year),",
				"     quantity = sum(transaction@quantity),",
				"          total_transaction = sum(transaction@quantity*Lenskart_Price)) ~> RevenuePerYear",
				"derivedColumn1 aggregate(groupBy(year,",
				"          Classification),",
				"     quantity = sum(transaction@quantity),",
				"          total_revenue = sum(transaction@quantity*Lenskart_Price)) ~> TotalRevenueYearAndCategory",
				"stores derive(rating = toFloat(substring({Rating_(reviewers)}, 1, 4))) ~> derivedColumn2",
				"derivedColumn2 aggregate(groupBy(Location),",
				"     rating = max(rating),",
				"          Store_Name = max(Store_Name),",
				"          Address = max(Address)) ~> TopRatedStore",
				"product aggregate(groupBy(Classification),",
				"     Brand_Name = min(Brand_Name),",
				"          Model_Name = min(Model_Name),",
				"          Purchase_Count = min(Purchase_Count)) ~> aggregate3",
				"TopRatedStore sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> TopRatedSink",
				"TopSellingClassificatoinBrandName sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"split1@LowOnStock sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"MaxCountCustomerCategory sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"TopBuyers sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5",
				"RevenuePerYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink6",
				"TotalRevenueYearAndCategory sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink7",
				"aggregate3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink8"
			]
		}
	}
}